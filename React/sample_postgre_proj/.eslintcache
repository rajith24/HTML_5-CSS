[{"C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\index.js":"1","C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\App.js":"2","C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\components\\Chart.js":"3","C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\components\\scatter.js":"4"},{"size":149,"mtime":1611866029703,"results":"5","hashOfConfig":"6"},{"size":497,"mtime":1612040220923,"results":"7","hashOfConfig":"6"},{"size":1351,"mtime":1611954124576,"results":"8","hashOfConfig":"6"},{"size":3506,"mtime":1612041158582,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"dyluhz",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\index.js",[],["22","23"],"C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\App.js",["24","25","26"],"import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport Chart from './components/Chart';\nimport Scatter from './components/scatter';\n\nimport './components/scatter';\n\nfunction App() {\n  // const x = JSON.parse(merchants)\n  return (\n    <div>\n      {/* {merchants ? merchants : 'There is no merchant data available'} */}\n      {/* <Chart/> */}\n      <Scatter/>\n      <canvas className=\"Plot\" width=\"400px\" height=\"400px\"></canvas>\n\n    </div>\n    \n    \n  );\n}\nexport default App;","C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\components\\Chart.js",["27","28","29"],"import React, {Component} from 'react';\r\nimport {Bar, Line, Pie, ScatterChart} from 'react-chartjs-2';\r\n\r\n\r\nclass Chart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            chartData: {\r\n                labels: ['January', 'February', 'March',\r\n           'April', 'May'],\r\n                datasets: [\r\n                    {\r\n                      label: 'Rainfall',\r\n                      fill: false,\r\n                      lineTension: 0.5,\r\n                      backgroundColor: 'rgba(75,192,192,1)',\r\n                      borderColor: 'rgba(0,0,0,1)',\r\n                      borderWidth: 2,\r\n                      data: [65, 59, 80, 81, 56]\r\n                    }\r\n                  ]\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"chart\">\r\n            <Line\r\n                data={this.state.chartData}\r\n                options={{\r\n                    title:{\r\n                    display:true,\r\n                    text:'Average Rainfall per month',\r\n                    fontSize:20\r\n                    },\r\n                    legend:{\r\n                    display:true,\r\n                    position:'right'\r\n                    }\r\n          }}\r\n        />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Chart;","C:\\Users\\rajit\\OneDrive\\Documents\\GitHub\\HTML_5-CSS_3-Javascript-React\\React\\sample_postgre_proj\\src\\components\\scatter.js",["30","31","32","33","34","35","36","37"],"import React, {Component} from 'react';\r\nimport Chart from 'chart.js';\r\nimport {Bar, Line, Pie, ScatterChart} from 'react-chartjs-2';\r\n\r\n\r\nclass Scatter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:false,\r\n            homes:[]\r\n        };\r\n        \r\n    }\r\n// componentDidMount(){\r\n//     fetch('http://localhost:5000')\r\n//     .then(response => response.json())\r\n//       .then((data) => {\r\n//         this.setState({\r\n//             isLoaded:true,\r\n//             homes: data\r\n//         });\r\n//         },\r\n//         // error handler\r\n//         (error) => {\r\n//         this.setState({\r\n//             isLoaded: true,\r\n//             error\r\n//         });\r\n//        })\r\n//   }\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n    try {\r\n        setInterval(async () => {\r\n        await fetch('http://localhost:5000')\r\n        .then(response => response.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    homes: data\r\n                });\r\n                })\r\n        }, 1000);\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }   \r\n\r\n\r\n render() {\r\n    console.clear();\r\n    const { error, isLoaded, homes } = this.state;\r\n    const tenpt = []\r\n    const temp = ['x','y'];\r\n    const xV = homes.map(home => home.x);\r\n    const yV = homes.map(home => home.y);\r\n    // xV.forEach((x, index) => {\r\n    //     tenpt.push({\r\n    //         x : xV[index],\r\n    //         y : yV[index] \r\n    //     })\r\n    // })\r\n    const x_y_values= xV.map((x, index) => {\r\n        return{\r\n            x : xV[index],\r\n            y : yV[index] \r\n\r\n        }\r\n    })\r\n\r\n    const ctx = document.getElementsByClassName('Plot');\r\n    console.log(x_y_values);\r\n    this.scatterChart = new Chart(ctx, {\r\n        \r\n        \r\n        type: 'scatter',\r\n        data: {\r\n            datasets: [{\r\n                label: 'CPU 0 SENSOR DATA',\r\n                backgroundColor: 'rgba(75, 148, 177,1)',\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                showLine:true,\r\n                borderWidth: 1,\r\n                data: x_y_values\r\n            }]},\r\n            \r\n        \r\n        options :{\r\n            maintainAspectRatio:false,\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                      display: true,\r\n                      labelString: 'Time(s)'\r\n                    },\r\n                    ticks: {\r\n\r\n                      // forces step size to be 5 units\r\n                      stepSize: 1 // <----- This prop sets the stepSize\r\n                    }\r\n                  }],\r\n                yAxes: [{\r\n                  display: true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'CPU Percentage (%)'\r\n                  },\r\n                  ticks: {\r\n                    min: 0,\r\n                    max: 100,\r\n              \r\n                    // forces step size to be 5 units\r\n                    stepSize: 5 // <----- This prop sets the stepSize\r\n                  }\r\n                }]\r\n              },\r\n                animation:{\r\n                    duration: 0,\r\n                },\r\n        }\r\n    \r\n    })\r\n   \r\n     return(\r\n        <div>\r\n           \r\n        {/* {homes.map(home => <div>{home.x}</div>)} */}\r\n        </div>\r\n     )} \r\n}\r\n\r\nexport default Scatter;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":1,"column":26,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"42","severity":1,"message":"47","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"42","severity":1,"message":"48","line":2,"column":9,"nodeType":"44","messageId":"45","endLine":2,"endColumn":12},{"ruleId":"42","severity":1,"message":"49","line":2,"column":20,"nodeType":"44","messageId":"45","endLine":2,"endColumn":23},{"ruleId":"42","severity":1,"message":"50","line":2,"column":25,"nodeType":"44","messageId":"45","endLine":2,"endColumn":37},{"ruleId":"42","severity":1,"message":"48","line":3,"column":9,"nodeType":"44","messageId":"45","endLine":3,"endColumn":12},{"ruleId":"42","severity":1,"message":"51","line":3,"column":14,"nodeType":"44","messageId":"45","endLine":3,"endColumn":18},{"ruleId":"42","severity":1,"message":"49","line":3,"column":20,"nodeType":"44","messageId":"45","endLine":3,"endColumn":23},{"ruleId":"42","severity":1,"message":"50","line":3,"column":25,"nodeType":"44","messageId":"45","endLine":3,"endColumn":37},{"ruleId":"42","severity":1,"message":"52","line":56,"column":13,"nodeType":"44","messageId":"45","endLine":56,"endColumn":18},{"ruleId":"42","severity":1,"message":"53","line":56,"column":20,"nodeType":"44","messageId":"45","endLine":56,"endColumn":28},{"ruleId":"42","severity":1,"message":"54","line":57,"column":11,"nodeType":"44","messageId":"45","endLine":57,"endColumn":16},{"ruleId":"42","severity":1,"message":"55","line":58,"column":11,"nodeType":"44","messageId":"45","endLine":58,"endColumn":15},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Chart' is defined but never used.","'Bar' is defined but never used.","'Pie' is defined but never used.","'ScatterChart' is defined but never used.","'Line' is defined but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'tenpt' is assigned a value but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]